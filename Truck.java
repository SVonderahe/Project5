import java.text.NumberFormat;

/**
 * <h1>Truck</h1> Represents a Truck
 *
 * Creates Object Truck to be used in Warehouse
 *
 * @author Sam Vonderahe, Aniruddha Dahad
 *
 * @version 12/9/2018
 *
 */
public class Truck extends Vehicle {

    private final double gasRate = 1.66;

    /**
     * Default Constructor
     */
    //============================================================================
    public Truck() {
        super();
    }

    //============================================================================

    /**
     * Constructor
     *
     * @param licensePlate license plate of vehicle
     * @param maxWeight    maximum weight that the vehicle can hold
     */
    //============================================================================
    public Truck(String licensePlate, double maxWeight) {
        super(licensePlate, maxWeight);
    }

    //============================================================================

    /*
     * =============================================================================
     * | Methods from Profitable Interface
     * =============================================================================
     */

    /**
     * Returns the profits generated by the packages currently in the Vehicle.
     * <p>
     * &sum;p<sub>price</sub> - (range<sub>max</sub> &times; 1.66)
     * </p>
     */
    @Override
    public double getProfit() {
        int maxRange = getRange(getPackages().get(0));
        double priceSum = 0;

        for (Package p : getPackages()) {
            priceSum += p.getPrice();

            if (maxRange < getRange(p)) {
                maxRange = getRange(p);
            }
        }

        double totalGasCost = gasRate * (double) maxRange;
        return priceSum - totalGasCost;
    }

    /**
     * Generates a String of the truck report. Truck report includes:
     * <ul>
     * <li>License Plate No.</li>
     * <li>Destination</li>
     * <li>Current Weight/Maximum Weight</li>
     * <li>Net Profit</li>
     * <li>Shipping labels of all packages in truck</li>
     * </ul>
     *
     * @return Truck Report
     */
    @Override
    public String report() {
        NumberFormat nf = NumberFormat.getCurrencyInstance();
        NumberFormat numfor = NumberFormat.getNumberInstance();
        numfor.setMinimumFractionDigits(2);
        String report = "";
        report +=
                "==========Truck Report==========\n" +
                        "License Plate No.: " + getLicensePlate() + "\n" +
                        "Destination: " + getZipDest() + "\n" +
                        "Weight Load: " + numfor.format(getCurrentWeight()) +
                        "/" + numfor.format(getMaxWeight()) + "\n" +
                        "Net Profit: " + nf.format(getProfit()) + "\n" +
                        "=====Shipping Labels=====\n";

        for (Package p : getPackages()) {
            report += p.shippingLabel() + "\n";
        }

        report += "==============================";
        return report;
    }
}