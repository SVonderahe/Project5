import java.text.NumberFormat;
import java.util.ArrayList;

/**
 * <h1>Drone</h1> Represents a Drone
 */

public class Drone extends Vehicle {

    final private double GAS_RATE = 1.33;
    /**
     * Default Contructor 
     */
    //============================================================================
    public Drone() {
        super();
    }
    
    //============================================================================

    /**
     * Constructor
     * 
     * @param licensePlate license plate of vehicle
     * @param maxWeight    maximum weight that the vehicle can hold
     */
    //============================================================================
    public Drone(String licensePlate, double maxWeight) {
        super(licensePlate, maxWeight);
    }
    
    //============================================================================

    /*
     * =============================================================================
     * | Methods from Profitable Interface
     * =============================================================================
     */
    /**
     * Returns the profits generated by the packages currently in the Truck.
     * <p>
     * &sum;p<sub>price</sub> - (range<sub>max</sub> &times; 1.33)
     * </p>
     */
    @Override
    public double getProfit() {
        int maxRange = getRange(getPackages().get(0));
        double priceSum = 0;

        for (Package p : getPackages()) {
            priceSum += p.getPrice();

            if (maxRange < getRange(p)) {
                maxRange = getRange(p);
            }
        }

        double totalGasCost = GAS_RATE * (double) maxRange;
        return priceSum - totalGasCost;
    }

    /**
     * Generates a String of the Drone report. Drone report includes:
     * <ul>
     * <li>License Plate No.</li>
     * <li>Destination</li>
     * <li>Current Weight/Maximum Weight</li>
     * <li>Net Profit</li>
     * <li>Shipping labels of all packages in truck</li>
     * </ul>
     * 
     * @return Truck Report
     */
    @Override
    public String report() {
        NumberFormat nf = NumberFormat.getCurrencyInstance();
        NumberFormat numfor = NumberFormat.getNumberInstance();
        numfor.setMinimumFractionDigits(2);
        String report = "";
        report +=
                "==========Drone Report==========\n" +
                        "License Plate No.: " + getLicensePlate() + "\n" +
                        "Destination: " + getZipDest() + "\n" +
                        "Weight Load: " + numfor.format(getCurrentWeight()) + "/" + numfor.format(getMaxWeight()) + "\n" +
                        "Net Profit: " + nf.format(getProfit()) + "\n" +
                        "=====Shipping Labels=====\n";

        for (Package p : getPackages()) {
            report += p.shippingLabel() + "\n";
        }

        report += "==============================";
        return report;
    }
}
